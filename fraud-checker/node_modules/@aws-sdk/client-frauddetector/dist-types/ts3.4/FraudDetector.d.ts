import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  BatchCreateVariableCommandInput,
  BatchCreateVariableCommandOutput,
} from "./commands/BatchCreateVariableCommand";
import {
  BatchGetVariableCommandInput,
  BatchGetVariableCommandOutput,
} from "./commands/BatchGetVariableCommand";
import {
  CancelBatchImportJobCommandInput,
  CancelBatchImportJobCommandOutput,
} from "./commands/CancelBatchImportJobCommand";
import {
  CancelBatchPredictionJobCommandInput,
  CancelBatchPredictionJobCommandOutput,
} from "./commands/CancelBatchPredictionJobCommand";
import {
  CreateBatchImportJobCommandInput,
  CreateBatchImportJobCommandOutput,
} from "./commands/CreateBatchImportJobCommand";
import {
  CreateBatchPredictionJobCommandInput,
  CreateBatchPredictionJobCommandOutput,
} from "./commands/CreateBatchPredictionJobCommand";
import {
  CreateDetectorVersionCommandInput,
  CreateDetectorVersionCommandOutput,
} from "./commands/CreateDetectorVersionCommand";
import {
  CreateListCommandInput,
  CreateListCommandOutput,
} from "./commands/CreateListCommand";
import {
  CreateModelCommandInput,
  CreateModelCommandOutput,
} from "./commands/CreateModelCommand";
import {
  CreateModelVersionCommandInput,
  CreateModelVersionCommandOutput,
} from "./commands/CreateModelVersionCommand";
import {
  CreateRuleCommandInput,
  CreateRuleCommandOutput,
} from "./commands/CreateRuleCommand";
import {
  CreateVariableCommandInput,
  CreateVariableCommandOutput,
} from "./commands/CreateVariableCommand";
import {
  DeleteBatchImportJobCommandInput,
  DeleteBatchImportJobCommandOutput,
} from "./commands/DeleteBatchImportJobCommand";
import {
  DeleteBatchPredictionJobCommandInput,
  DeleteBatchPredictionJobCommandOutput,
} from "./commands/DeleteBatchPredictionJobCommand";
import {
  DeleteDetectorCommandInput,
  DeleteDetectorCommandOutput,
} from "./commands/DeleteDetectorCommand";
import {
  DeleteDetectorVersionCommandInput,
  DeleteDetectorVersionCommandOutput,
} from "./commands/DeleteDetectorVersionCommand";
import {
  DeleteEntityTypeCommandInput,
  DeleteEntityTypeCommandOutput,
} from "./commands/DeleteEntityTypeCommand";
import {
  DeleteEventCommandInput,
  DeleteEventCommandOutput,
} from "./commands/DeleteEventCommand";
import {
  DeleteEventsByEventTypeCommandInput,
  DeleteEventsByEventTypeCommandOutput,
} from "./commands/DeleteEventsByEventTypeCommand";
import {
  DeleteEventTypeCommandInput,
  DeleteEventTypeCommandOutput,
} from "./commands/DeleteEventTypeCommand";
import {
  DeleteExternalModelCommandInput,
  DeleteExternalModelCommandOutput,
} from "./commands/DeleteExternalModelCommand";
import {
  DeleteLabelCommandInput,
  DeleteLabelCommandOutput,
} from "./commands/DeleteLabelCommand";
import {
  DeleteListCommandInput,
  DeleteListCommandOutput,
} from "./commands/DeleteListCommand";
import {
  DeleteModelCommandInput,
  DeleteModelCommandOutput,
} from "./commands/DeleteModelCommand";
import {
  DeleteModelVersionCommandInput,
  DeleteModelVersionCommandOutput,
} from "./commands/DeleteModelVersionCommand";
import {
  DeleteOutcomeCommandInput,
  DeleteOutcomeCommandOutput,
} from "./commands/DeleteOutcomeCommand";
import {
  DeleteRuleCommandInput,
  DeleteRuleCommandOutput,
} from "./commands/DeleteRuleCommand";
import {
  DeleteVariableCommandInput,
  DeleteVariableCommandOutput,
} from "./commands/DeleteVariableCommand";
import {
  DescribeDetectorCommandInput,
  DescribeDetectorCommandOutput,
} from "./commands/DescribeDetectorCommand";
import {
  DescribeModelVersionsCommandInput,
  DescribeModelVersionsCommandOutput,
} from "./commands/DescribeModelVersionsCommand";
import {
  GetBatchImportJobsCommandInput,
  GetBatchImportJobsCommandOutput,
} from "./commands/GetBatchImportJobsCommand";
import {
  GetBatchPredictionJobsCommandInput,
  GetBatchPredictionJobsCommandOutput,
} from "./commands/GetBatchPredictionJobsCommand";
import {
  GetDeleteEventsByEventTypeStatusCommandInput,
  GetDeleteEventsByEventTypeStatusCommandOutput,
} from "./commands/GetDeleteEventsByEventTypeStatusCommand";
import {
  GetDetectorsCommandInput,
  GetDetectorsCommandOutput,
} from "./commands/GetDetectorsCommand";
import {
  GetDetectorVersionCommandInput,
  GetDetectorVersionCommandOutput,
} from "./commands/GetDetectorVersionCommand";
import {
  GetEntityTypesCommandInput,
  GetEntityTypesCommandOutput,
} from "./commands/GetEntityTypesCommand";
import {
  GetEventCommandInput,
  GetEventCommandOutput,
} from "./commands/GetEventCommand";
import {
  GetEventPredictionCommandInput,
  GetEventPredictionCommandOutput,
} from "./commands/GetEventPredictionCommand";
import {
  GetEventPredictionMetadataCommandInput,
  GetEventPredictionMetadataCommandOutput,
} from "./commands/GetEventPredictionMetadataCommand";
import {
  GetEventTypesCommandInput,
  GetEventTypesCommandOutput,
} from "./commands/GetEventTypesCommand";
import {
  GetExternalModelsCommandInput,
  GetExternalModelsCommandOutput,
} from "./commands/GetExternalModelsCommand";
import {
  GetKMSEncryptionKeyCommandInput,
  GetKMSEncryptionKeyCommandOutput,
} from "./commands/GetKMSEncryptionKeyCommand";
import {
  GetLabelsCommandInput,
  GetLabelsCommandOutput,
} from "./commands/GetLabelsCommand";
import {
  GetListElementsCommandInput,
  GetListElementsCommandOutput,
} from "./commands/GetListElementsCommand";
import {
  GetListsMetadataCommandInput,
  GetListsMetadataCommandOutput,
} from "./commands/GetListsMetadataCommand";
import {
  GetModelsCommandInput,
  GetModelsCommandOutput,
} from "./commands/GetModelsCommand";
import {
  GetModelVersionCommandInput,
  GetModelVersionCommandOutput,
} from "./commands/GetModelVersionCommand";
import {
  GetOutcomesCommandInput,
  GetOutcomesCommandOutput,
} from "./commands/GetOutcomesCommand";
import {
  GetRulesCommandInput,
  GetRulesCommandOutput,
} from "./commands/GetRulesCommand";
import {
  GetVariablesCommandInput,
  GetVariablesCommandOutput,
} from "./commands/GetVariablesCommand";
import {
  ListEventPredictionsCommandInput,
  ListEventPredictionsCommandOutput,
} from "./commands/ListEventPredictionsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PutDetectorCommandInput,
  PutDetectorCommandOutput,
} from "./commands/PutDetectorCommand";
import {
  PutEntityTypeCommandInput,
  PutEntityTypeCommandOutput,
} from "./commands/PutEntityTypeCommand";
import {
  PutEventTypeCommandInput,
  PutEventTypeCommandOutput,
} from "./commands/PutEventTypeCommand";
import {
  PutExternalModelCommandInput,
  PutExternalModelCommandOutput,
} from "./commands/PutExternalModelCommand";
import {
  PutKMSEncryptionKeyCommandInput,
  PutKMSEncryptionKeyCommandOutput,
} from "./commands/PutKMSEncryptionKeyCommand";
import {
  PutLabelCommandInput,
  PutLabelCommandOutput,
} from "./commands/PutLabelCommand";
import {
  PutOutcomeCommandInput,
  PutOutcomeCommandOutput,
} from "./commands/PutOutcomeCommand";
import {
  SendEventCommandInput,
  SendEventCommandOutput,
} from "./commands/SendEventCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateDetectorVersionCommandInput,
  UpdateDetectorVersionCommandOutput,
} from "./commands/UpdateDetectorVersionCommand";
import {
  UpdateDetectorVersionMetadataCommandInput,
  UpdateDetectorVersionMetadataCommandOutput,
} from "./commands/UpdateDetectorVersionMetadataCommand";
import {
  UpdateDetectorVersionStatusCommandInput,
  UpdateDetectorVersionStatusCommandOutput,
} from "./commands/UpdateDetectorVersionStatusCommand";
import {
  UpdateEventLabelCommandInput,
  UpdateEventLabelCommandOutput,
} from "./commands/UpdateEventLabelCommand";
import {
  UpdateListCommandInput,
  UpdateListCommandOutput,
} from "./commands/UpdateListCommand";
import {
  UpdateModelCommandInput,
  UpdateModelCommandOutput,
} from "./commands/UpdateModelCommand";
import {
  UpdateModelVersionCommandInput,
  UpdateModelVersionCommandOutput,
} from "./commands/UpdateModelVersionCommand";
import {
  UpdateModelVersionStatusCommandInput,
  UpdateModelVersionStatusCommandOutput,
} from "./commands/UpdateModelVersionStatusCommand";
import {
  UpdateRuleMetadataCommandInput,
  UpdateRuleMetadataCommandOutput,
} from "./commands/UpdateRuleMetadataCommand";
import {
  UpdateRuleVersionCommandInput,
  UpdateRuleVersionCommandOutput,
} from "./commands/UpdateRuleVersionCommand";
import {
  UpdateVariableCommandInput,
  UpdateVariableCommandOutput,
} from "./commands/UpdateVariableCommand";
import { FraudDetectorClient } from "./FraudDetectorClient";
export interface FraudDetector {
  batchCreateVariable(
    args: BatchCreateVariableCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchCreateVariableCommandOutput>;
  batchCreateVariable(
    args: BatchCreateVariableCommandInput,
    cb: (err: any, data?: BatchCreateVariableCommandOutput) => void
  ): void;
  batchCreateVariable(
    args: BatchCreateVariableCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchCreateVariableCommandOutput) => void
  ): void;
  batchGetVariable(
    args: BatchGetVariableCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchGetVariableCommandOutput>;
  batchGetVariable(
    args: BatchGetVariableCommandInput,
    cb: (err: any, data?: BatchGetVariableCommandOutput) => void
  ): void;
  batchGetVariable(
    args: BatchGetVariableCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: BatchGetVariableCommandOutput) => void
  ): void;
  cancelBatchImportJob(
    args: CancelBatchImportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelBatchImportJobCommandOutput>;
  cancelBatchImportJob(
    args: CancelBatchImportJobCommandInput,
    cb: (err: any, data?: CancelBatchImportJobCommandOutput) => void
  ): void;
  cancelBatchImportJob(
    args: CancelBatchImportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelBatchImportJobCommandOutput) => void
  ): void;
  cancelBatchPredictionJob(
    args: CancelBatchPredictionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelBatchPredictionJobCommandOutput>;
  cancelBatchPredictionJob(
    args: CancelBatchPredictionJobCommandInput,
    cb: (err: any, data?: CancelBatchPredictionJobCommandOutput) => void
  ): void;
  cancelBatchPredictionJob(
    args: CancelBatchPredictionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelBatchPredictionJobCommandOutput) => void
  ): void;
  createBatchImportJob(
    args: CreateBatchImportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBatchImportJobCommandOutput>;
  createBatchImportJob(
    args: CreateBatchImportJobCommandInput,
    cb: (err: any, data?: CreateBatchImportJobCommandOutput) => void
  ): void;
  createBatchImportJob(
    args: CreateBatchImportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBatchImportJobCommandOutput) => void
  ): void;
  createBatchPredictionJob(
    args: CreateBatchPredictionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBatchPredictionJobCommandOutput>;
  createBatchPredictionJob(
    args: CreateBatchPredictionJobCommandInput,
    cb: (err: any, data?: CreateBatchPredictionJobCommandOutput) => void
  ): void;
  createBatchPredictionJob(
    args: CreateBatchPredictionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBatchPredictionJobCommandOutput) => void
  ): void;
  createDetectorVersion(
    args: CreateDetectorVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDetectorVersionCommandOutput>;
  createDetectorVersion(
    args: CreateDetectorVersionCommandInput,
    cb: (err: any, data?: CreateDetectorVersionCommandOutput) => void
  ): void;
  createDetectorVersion(
    args: CreateDetectorVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDetectorVersionCommandOutput) => void
  ): void;
  createList(
    args: CreateListCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateListCommandOutput>;
  createList(
    args: CreateListCommandInput,
    cb: (err: any, data?: CreateListCommandOutput) => void
  ): void;
  createList(
    args: CreateListCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateListCommandOutput) => void
  ): void;
  createModel(
    args: CreateModelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateModelCommandOutput>;
  createModel(
    args: CreateModelCommandInput,
    cb: (err: any, data?: CreateModelCommandOutput) => void
  ): void;
  createModel(
    args: CreateModelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateModelCommandOutput) => void
  ): void;
  createModelVersion(
    args: CreateModelVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateModelVersionCommandOutput>;
  createModelVersion(
    args: CreateModelVersionCommandInput,
    cb: (err: any, data?: CreateModelVersionCommandOutput) => void
  ): void;
  createModelVersion(
    args: CreateModelVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateModelVersionCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleCommandOutput>;
  createRule(
    args: CreateRuleCommandInput,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createVariable(
    args: CreateVariableCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVariableCommandOutput>;
  createVariable(
    args: CreateVariableCommandInput,
    cb: (err: any, data?: CreateVariableCommandOutput) => void
  ): void;
  createVariable(
    args: CreateVariableCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVariableCommandOutput) => void
  ): void;
  deleteBatchImportJob(
    args: DeleteBatchImportJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBatchImportJobCommandOutput>;
  deleteBatchImportJob(
    args: DeleteBatchImportJobCommandInput,
    cb: (err: any, data?: DeleteBatchImportJobCommandOutput) => void
  ): void;
  deleteBatchImportJob(
    args: DeleteBatchImportJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBatchImportJobCommandOutput) => void
  ): void;
  deleteBatchPredictionJob(
    args: DeleteBatchPredictionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBatchPredictionJobCommandOutput>;
  deleteBatchPredictionJob(
    args: DeleteBatchPredictionJobCommandInput,
    cb: (err: any, data?: DeleteBatchPredictionJobCommandOutput) => void
  ): void;
  deleteBatchPredictionJob(
    args: DeleteBatchPredictionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBatchPredictionJobCommandOutput) => void
  ): void;
  deleteDetector(
    args: DeleteDetectorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDetectorCommandOutput>;
  deleteDetector(
    args: DeleteDetectorCommandInput,
    cb: (err: any, data?: DeleteDetectorCommandOutput) => void
  ): void;
  deleteDetector(
    args: DeleteDetectorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDetectorCommandOutput) => void
  ): void;
  deleteDetectorVersion(
    args: DeleteDetectorVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDetectorVersionCommandOutput>;
  deleteDetectorVersion(
    args: DeleteDetectorVersionCommandInput,
    cb: (err: any, data?: DeleteDetectorVersionCommandOutput) => void
  ): void;
  deleteDetectorVersion(
    args: DeleteDetectorVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDetectorVersionCommandOutput) => void
  ): void;
  deleteEntityType(
    args: DeleteEntityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEntityTypeCommandOutput>;
  deleteEntityType(
    args: DeleteEntityTypeCommandInput,
    cb: (err: any, data?: DeleteEntityTypeCommandOutput) => void
  ): void;
  deleteEntityType(
    args: DeleteEntityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEntityTypeCommandOutput) => void
  ): void;
  deleteEvent(
    args: DeleteEventCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEventCommandOutput>;
  deleteEvent(
    args: DeleteEventCommandInput,
    cb: (err: any, data?: DeleteEventCommandOutput) => void
  ): void;
  deleteEvent(
    args: DeleteEventCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEventCommandOutput) => void
  ): void;
  deleteEventsByEventType(
    args: DeleteEventsByEventTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEventsByEventTypeCommandOutput>;
  deleteEventsByEventType(
    args: DeleteEventsByEventTypeCommandInput,
    cb: (err: any, data?: DeleteEventsByEventTypeCommandOutput) => void
  ): void;
  deleteEventsByEventType(
    args: DeleteEventsByEventTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEventsByEventTypeCommandOutput) => void
  ): void;
  deleteEventType(
    args: DeleteEventTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteEventTypeCommandOutput>;
  deleteEventType(
    args: DeleteEventTypeCommandInput,
    cb: (err: any, data?: DeleteEventTypeCommandOutput) => void
  ): void;
  deleteEventType(
    args: DeleteEventTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteEventTypeCommandOutput) => void
  ): void;
  deleteExternalModel(
    args: DeleteExternalModelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteExternalModelCommandOutput>;
  deleteExternalModel(
    args: DeleteExternalModelCommandInput,
    cb: (err: any, data?: DeleteExternalModelCommandOutput) => void
  ): void;
  deleteExternalModel(
    args: DeleteExternalModelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteExternalModelCommandOutput) => void
  ): void;
  deleteLabel(
    args: DeleteLabelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLabelCommandOutput>;
  deleteLabel(
    args: DeleteLabelCommandInput,
    cb: (err: any, data?: DeleteLabelCommandOutput) => void
  ): void;
  deleteLabel(
    args: DeleteLabelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLabelCommandOutput) => void
  ): void;
  deleteList(
    args: DeleteListCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteListCommandOutput>;
  deleteList(
    args: DeleteListCommandInput,
    cb: (err: any, data?: DeleteListCommandOutput) => void
  ): void;
  deleteList(
    args: DeleteListCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteListCommandOutput) => void
  ): void;
  deleteModel(
    args: DeleteModelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteModelCommandOutput>;
  deleteModel(
    args: DeleteModelCommandInput,
    cb: (err: any, data?: DeleteModelCommandOutput) => void
  ): void;
  deleteModel(
    args: DeleteModelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteModelCommandOutput) => void
  ): void;
  deleteModelVersion(
    args: DeleteModelVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteModelVersionCommandOutput>;
  deleteModelVersion(
    args: DeleteModelVersionCommandInput,
    cb: (err: any, data?: DeleteModelVersionCommandOutput) => void
  ): void;
  deleteModelVersion(
    args: DeleteModelVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteModelVersionCommandOutput) => void
  ): void;
  deleteOutcome(
    args: DeleteOutcomeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteOutcomeCommandOutput>;
  deleteOutcome(
    args: DeleteOutcomeCommandInput,
    cb: (err: any, data?: DeleteOutcomeCommandOutput) => void
  ): void;
  deleteOutcome(
    args: DeleteOutcomeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteOutcomeCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleCommandOutput>;
  deleteRule(
    args: DeleteRuleCommandInput,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteVariable(
    args: DeleteVariableCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVariableCommandOutput>;
  deleteVariable(
    args: DeleteVariableCommandInput,
    cb: (err: any, data?: DeleteVariableCommandOutput) => void
  ): void;
  deleteVariable(
    args: DeleteVariableCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVariableCommandOutput) => void
  ): void;
  describeDetector(
    args: DescribeDetectorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeDetectorCommandOutput>;
  describeDetector(
    args: DescribeDetectorCommandInput,
    cb: (err: any, data?: DescribeDetectorCommandOutput) => void
  ): void;
  describeDetector(
    args: DescribeDetectorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeDetectorCommandOutput) => void
  ): void;
  describeModelVersions(): Promise<DescribeModelVersionsCommandOutput>;
  describeModelVersions(
    args: DescribeModelVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeModelVersionsCommandOutput>;
  describeModelVersions(
    args: DescribeModelVersionsCommandInput,
    cb: (err: any, data?: DescribeModelVersionsCommandOutput) => void
  ): void;
  describeModelVersions(
    args: DescribeModelVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeModelVersionsCommandOutput) => void
  ): void;
  getBatchImportJobs(): Promise<GetBatchImportJobsCommandOutput>;
  getBatchImportJobs(
    args: GetBatchImportJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBatchImportJobsCommandOutput>;
  getBatchImportJobs(
    args: GetBatchImportJobsCommandInput,
    cb: (err: any, data?: GetBatchImportJobsCommandOutput) => void
  ): void;
  getBatchImportJobs(
    args: GetBatchImportJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBatchImportJobsCommandOutput) => void
  ): void;
  getBatchPredictionJobs(): Promise<GetBatchPredictionJobsCommandOutput>;
  getBatchPredictionJobs(
    args: GetBatchPredictionJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBatchPredictionJobsCommandOutput>;
  getBatchPredictionJobs(
    args: GetBatchPredictionJobsCommandInput,
    cb: (err: any, data?: GetBatchPredictionJobsCommandOutput) => void
  ): void;
  getBatchPredictionJobs(
    args: GetBatchPredictionJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBatchPredictionJobsCommandOutput) => void
  ): void;
  getDeleteEventsByEventTypeStatus(
    args: GetDeleteEventsByEventTypeStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDeleteEventsByEventTypeStatusCommandOutput>;
  getDeleteEventsByEventTypeStatus(
    args: GetDeleteEventsByEventTypeStatusCommandInput,
    cb: (err: any, data?: GetDeleteEventsByEventTypeStatusCommandOutput) => void
  ): void;
  getDeleteEventsByEventTypeStatus(
    args: GetDeleteEventsByEventTypeStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDeleteEventsByEventTypeStatusCommandOutput) => void
  ): void;
  getDetectors(): Promise<GetDetectorsCommandOutput>;
  getDetectors(
    args: GetDetectorsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDetectorsCommandOutput>;
  getDetectors(
    args: GetDetectorsCommandInput,
    cb: (err: any, data?: GetDetectorsCommandOutput) => void
  ): void;
  getDetectors(
    args: GetDetectorsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDetectorsCommandOutput) => void
  ): void;
  getDetectorVersion(
    args: GetDetectorVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDetectorVersionCommandOutput>;
  getDetectorVersion(
    args: GetDetectorVersionCommandInput,
    cb: (err: any, data?: GetDetectorVersionCommandOutput) => void
  ): void;
  getDetectorVersion(
    args: GetDetectorVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDetectorVersionCommandOutput) => void
  ): void;
  getEntityTypes(): Promise<GetEntityTypesCommandOutput>;
  getEntityTypes(
    args: GetEntityTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEntityTypesCommandOutput>;
  getEntityTypes(
    args: GetEntityTypesCommandInput,
    cb: (err: any, data?: GetEntityTypesCommandOutput) => void
  ): void;
  getEntityTypes(
    args: GetEntityTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEntityTypesCommandOutput) => void
  ): void;
  getEvent(
    args: GetEventCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEventCommandOutput>;
  getEvent(
    args: GetEventCommandInput,
    cb: (err: any, data?: GetEventCommandOutput) => void
  ): void;
  getEvent(
    args: GetEventCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEventCommandOutput) => void
  ): void;
  getEventPrediction(
    args: GetEventPredictionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEventPredictionCommandOutput>;
  getEventPrediction(
    args: GetEventPredictionCommandInput,
    cb: (err: any, data?: GetEventPredictionCommandOutput) => void
  ): void;
  getEventPrediction(
    args: GetEventPredictionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEventPredictionCommandOutput) => void
  ): void;
  getEventPredictionMetadata(
    args: GetEventPredictionMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEventPredictionMetadataCommandOutput>;
  getEventPredictionMetadata(
    args: GetEventPredictionMetadataCommandInput,
    cb: (err: any, data?: GetEventPredictionMetadataCommandOutput) => void
  ): void;
  getEventPredictionMetadata(
    args: GetEventPredictionMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEventPredictionMetadataCommandOutput) => void
  ): void;
  getEventTypes(): Promise<GetEventTypesCommandOutput>;
  getEventTypes(
    args: GetEventTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetEventTypesCommandOutput>;
  getEventTypes(
    args: GetEventTypesCommandInput,
    cb: (err: any, data?: GetEventTypesCommandOutput) => void
  ): void;
  getEventTypes(
    args: GetEventTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetEventTypesCommandOutput) => void
  ): void;
  getExternalModels(): Promise<GetExternalModelsCommandOutput>;
  getExternalModels(
    args: GetExternalModelsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetExternalModelsCommandOutput>;
  getExternalModels(
    args: GetExternalModelsCommandInput,
    cb: (err: any, data?: GetExternalModelsCommandOutput) => void
  ): void;
  getExternalModels(
    args: GetExternalModelsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetExternalModelsCommandOutput) => void
  ): void;
  getKMSEncryptionKey(): Promise<GetKMSEncryptionKeyCommandOutput>;
  getKMSEncryptionKey(
    args: GetKMSEncryptionKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKMSEncryptionKeyCommandOutput>;
  getKMSEncryptionKey(
    args: GetKMSEncryptionKeyCommandInput,
    cb: (err: any, data?: GetKMSEncryptionKeyCommandOutput) => void
  ): void;
  getKMSEncryptionKey(
    args: GetKMSEncryptionKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKMSEncryptionKeyCommandOutput) => void
  ): void;
  getLabels(): Promise<GetLabelsCommandOutput>;
  getLabels(
    args: GetLabelsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLabelsCommandOutput>;
  getLabels(
    args: GetLabelsCommandInput,
    cb: (err: any, data?: GetLabelsCommandOutput) => void
  ): void;
  getLabels(
    args: GetLabelsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLabelsCommandOutput) => void
  ): void;
  getListElements(
    args: GetListElementsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetListElementsCommandOutput>;
  getListElements(
    args: GetListElementsCommandInput,
    cb: (err: any, data?: GetListElementsCommandOutput) => void
  ): void;
  getListElements(
    args: GetListElementsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetListElementsCommandOutput) => void
  ): void;
  getListsMetadata(): Promise<GetListsMetadataCommandOutput>;
  getListsMetadata(
    args: GetListsMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetListsMetadataCommandOutput>;
  getListsMetadata(
    args: GetListsMetadataCommandInput,
    cb: (err: any, data?: GetListsMetadataCommandOutput) => void
  ): void;
  getListsMetadata(
    args: GetListsMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetListsMetadataCommandOutput) => void
  ): void;
  getModels(): Promise<GetModelsCommandOutput>;
  getModels(
    args: GetModelsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetModelsCommandOutput>;
  getModels(
    args: GetModelsCommandInput,
    cb: (err: any, data?: GetModelsCommandOutput) => void
  ): void;
  getModels(
    args: GetModelsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetModelsCommandOutput) => void
  ): void;
  getModelVersion(
    args: GetModelVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetModelVersionCommandOutput>;
  getModelVersion(
    args: GetModelVersionCommandInput,
    cb: (err: any, data?: GetModelVersionCommandOutput) => void
  ): void;
  getModelVersion(
    args: GetModelVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetModelVersionCommandOutput) => void
  ): void;
  getOutcomes(): Promise<GetOutcomesCommandOutput>;
  getOutcomes(
    args: GetOutcomesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOutcomesCommandOutput>;
  getOutcomes(
    args: GetOutcomesCommandInput,
    cb: (err: any, data?: GetOutcomesCommandOutput) => void
  ): void;
  getOutcomes(
    args: GetOutcomesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOutcomesCommandOutput) => void
  ): void;
  getRules(
    args: GetRulesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRulesCommandOutput>;
  getRules(
    args: GetRulesCommandInput,
    cb: (err: any, data?: GetRulesCommandOutput) => void
  ): void;
  getRules(
    args: GetRulesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRulesCommandOutput) => void
  ): void;
  getVariables(): Promise<GetVariablesCommandOutput>;
  getVariables(
    args: GetVariablesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetVariablesCommandOutput>;
  getVariables(
    args: GetVariablesCommandInput,
    cb: (err: any, data?: GetVariablesCommandOutput) => void
  ): void;
  getVariables(
    args: GetVariablesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetVariablesCommandOutput) => void
  ): void;
  listEventPredictions(): Promise<ListEventPredictionsCommandOutput>;
  listEventPredictions(
    args: ListEventPredictionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEventPredictionsCommandOutput>;
  listEventPredictions(
    args: ListEventPredictionsCommandInput,
    cb: (err: any, data?: ListEventPredictionsCommandOutput) => void
  ): void;
  listEventPredictions(
    args: ListEventPredictionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEventPredictionsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  putDetector(
    args: PutDetectorCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutDetectorCommandOutput>;
  putDetector(
    args: PutDetectorCommandInput,
    cb: (err: any, data?: PutDetectorCommandOutput) => void
  ): void;
  putDetector(
    args: PutDetectorCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutDetectorCommandOutput) => void
  ): void;
  putEntityType(
    args: PutEntityTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutEntityTypeCommandOutput>;
  putEntityType(
    args: PutEntityTypeCommandInput,
    cb: (err: any, data?: PutEntityTypeCommandOutput) => void
  ): void;
  putEntityType(
    args: PutEntityTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutEntityTypeCommandOutput) => void
  ): void;
  putEventType(
    args: PutEventTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutEventTypeCommandOutput>;
  putEventType(
    args: PutEventTypeCommandInput,
    cb: (err: any, data?: PutEventTypeCommandOutput) => void
  ): void;
  putEventType(
    args: PutEventTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutEventTypeCommandOutput) => void
  ): void;
  putExternalModel(
    args: PutExternalModelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutExternalModelCommandOutput>;
  putExternalModel(
    args: PutExternalModelCommandInput,
    cb: (err: any, data?: PutExternalModelCommandOutput) => void
  ): void;
  putExternalModel(
    args: PutExternalModelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutExternalModelCommandOutput) => void
  ): void;
  putKMSEncryptionKey(
    args: PutKMSEncryptionKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutKMSEncryptionKeyCommandOutput>;
  putKMSEncryptionKey(
    args: PutKMSEncryptionKeyCommandInput,
    cb: (err: any, data?: PutKMSEncryptionKeyCommandOutput) => void
  ): void;
  putKMSEncryptionKey(
    args: PutKMSEncryptionKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutKMSEncryptionKeyCommandOutput) => void
  ): void;
  putLabel(
    args: PutLabelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLabelCommandOutput>;
  putLabel(
    args: PutLabelCommandInput,
    cb: (err: any, data?: PutLabelCommandOutput) => void
  ): void;
  putLabel(
    args: PutLabelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLabelCommandOutput) => void
  ): void;
  putOutcome(
    args: PutOutcomeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutOutcomeCommandOutput>;
  putOutcome(
    args: PutOutcomeCommandInput,
    cb: (err: any, data?: PutOutcomeCommandOutput) => void
  ): void;
  putOutcome(
    args: PutOutcomeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutOutcomeCommandOutput) => void
  ): void;
  sendEvent(
    args: SendEventCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendEventCommandOutput>;
  sendEvent(
    args: SendEventCommandInput,
    cb: (err: any, data?: SendEventCommandOutput) => void
  ): void;
  sendEvent(
    args: SendEventCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendEventCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateDetectorVersion(
    args: UpdateDetectorVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDetectorVersionCommandOutput>;
  updateDetectorVersion(
    args: UpdateDetectorVersionCommandInput,
    cb: (err: any, data?: UpdateDetectorVersionCommandOutput) => void
  ): void;
  updateDetectorVersion(
    args: UpdateDetectorVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDetectorVersionCommandOutput) => void
  ): void;
  updateDetectorVersionMetadata(
    args: UpdateDetectorVersionMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDetectorVersionMetadataCommandOutput>;
  updateDetectorVersionMetadata(
    args: UpdateDetectorVersionMetadataCommandInput,
    cb: (err: any, data?: UpdateDetectorVersionMetadataCommandOutput) => void
  ): void;
  updateDetectorVersionMetadata(
    args: UpdateDetectorVersionMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDetectorVersionMetadataCommandOutput) => void
  ): void;
  updateDetectorVersionStatus(
    args: UpdateDetectorVersionStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDetectorVersionStatusCommandOutput>;
  updateDetectorVersionStatus(
    args: UpdateDetectorVersionStatusCommandInput,
    cb: (err: any, data?: UpdateDetectorVersionStatusCommandOutput) => void
  ): void;
  updateDetectorVersionStatus(
    args: UpdateDetectorVersionStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDetectorVersionStatusCommandOutput) => void
  ): void;
  updateEventLabel(
    args: UpdateEventLabelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateEventLabelCommandOutput>;
  updateEventLabel(
    args: UpdateEventLabelCommandInput,
    cb: (err: any, data?: UpdateEventLabelCommandOutput) => void
  ): void;
  updateEventLabel(
    args: UpdateEventLabelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateEventLabelCommandOutput) => void
  ): void;
  updateList(
    args: UpdateListCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateListCommandOutput>;
  updateList(
    args: UpdateListCommandInput,
    cb: (err: any, data?: UpdateListCommandOutput) => void
  ): void;
  updateList(
    args: UpdateListCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateListCommandOutput) => void
  ): void;
  updateModel(
    args: UpdateModelCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateModelCommandOutput>;
  updateModel(
    args: UpdateModelCommandInput,
    cb: (err: any, data?: UpdateModelCommandOutput) => void
  ): void;
  updateModel(
    args: UpdateModelCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateModelCommandOutput) => void
  ): void;
  updateModelVersion(
    args: UpdateModelVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateModelVersionCommandOutput>;
  updateModelVersion(
    args: UpdateModelVersionCommandInput,
    cb: (err: any, data?: UpdateModelVersionCommandOutput) => void
  ): void;
  updateModelVersion(
    args: UpdateModelVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateModelVersionCommandOutput) => void
  ): void;
  updateModelVersionStatus(
    args: UpdateModelVersionStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateModelVersionStatusCommandOutput>;
  updateModelVersionStatus(
    args: UpdateModelVersionStatusCommandInput,
    cb: (err: any, data?: UpdateModelVersionStatusCommandOutput) => void
  ): void;
  updateModelVersionStatus(
    args: UpdateModelVersionStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateModelVersionStatusCommandOutput) => void
  ): void;
  updateRuleMetadata(
    args: UpdateRuleMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleMetadataCommandOutput>;
  updateRuleMetadata(
    args: UpdateRuleMetadataCommandInput,
    cb: (err: any, data?: UpdateRuleMetadataCommandOutput) => void
  ): void;
  updateRuleMetadata(
    args: UpdateRuleMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleMetadataCommandOutput) => void
  ): void;
  updateRuleVersion(
    args: UpdateRuleVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleVersionCommandOutput>;
  updateRuleVersion(
    args: UpdateRuleVersionCommandInput,
    cb: (err: any, data?: UpdateRuleVersionCommandOutput) => void
  ): void;
  updateRuleVersion(
    args: UpdateRuleVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleVersionCommandOutput) => void
  ): void;
  updateVariable(
    args: UpdateVariableCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateVariableCommandOutput>;
  updateVariable(
    args: UpdateVariableCommandInput,
    cb: (err: any, data?: UpdateVariableCommandOutput) => void
  ): void;
  updateVariable(
    args: UpdateVariableCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateVariableCommandOutput) => void
  ): void;
}
export declare class FraudDetector
  extends FraudDetectorClient
  implements FraudDetector {}
